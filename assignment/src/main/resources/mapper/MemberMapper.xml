<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="okestro.assignment.repository.MemberMapper">

    <!--(MemberRepository.save) => saveMember, saveMemberRole-->
    <insert id="saveMember">
        <!-- member 테이블에 회원 등록-->
        insert into member(email, pw, nickname)
        values (#{email}, #{pw}, #{nickname})
    </insert>
    
    <insert id="saveMemberRole" parameterType="Member">
        <!-- member_role 테이블에 회원 등록-->
        insert into member_role(role, member_email) values
        <foreach collection="memberRoleList" item="role" separator=",">
            (#{role}, #{email})
        </foreach>
    </insert>

    <!-- findByEmail - Member 객체를 매핑하는 resultMap -->
    <resultMap id="memberMap" type="Member">
        <id property="email" column="email"/>
        <result property="pw" column="pw"/>
        <result property="nickname" column="nickname"/>
        <result property="social" column="social"/>
        <collection property="memberRoleList" ofType="MemberRole" resultMap="memberRoleMap"/>
    </resultMap>

    <!-- findByEmail - MemberRole 객체를 매핑하는 resultMap -->
    <resultMap id="memberRoleMap" type="MemberRole">
        <result property="role" column="role"/>
    </resultMap>

    <select id="findByEmail" resultMap="memberMap">
        select m.*, r.role
        from member m
                 left join member_role r on m.email = r.member_email
        where m.email = #{email}
    </select>

    <delete id="deleteByEmail">
        delete
        from member
        where email = #{email}
    </delete>

    <select id="findByNickname" resultType="Member">
        select *
        from member
        where nickname = #{nickname}
    </select>

</mapper>