<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="okestro.assignment.repository.BoardMapper">


    <insert id="save" useGeneratedKeys="true" keyProperty="bno">
        insert into board(title, content, email, writer)
        values (#{title}, #{content}, #{member.email}, #{member.nickname})
    </insert>

    <insert id="saveBoardImage" parameterType="Board">
        insert into board_image(board_bno, file_name, ord) values
        <foreach collection="imageList" item="image" separator=",">
            (#{bno}, #{image.fileName}, #{image.ord})
        </foreach>
    </insert>

    <!-- findByBno - Board 객체를 매핑하는 resultMap-->
    <resultMap id="boardMap" type="Board">
        <id property="bno" column="bno"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="writer" column="writer"/>
        <result property="regTime" column="reg_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="viewCount" column="view_count"/>
        <association property="member" column="email" resultMap="memberMap"/>
        <collection property="imageList" ofType="BoardImage" resultMap="boardImageMap"/>
    </resultMap>

    <!-- findByBno - Member 객체를 매핑하는 resultMap-->
    <resultMap id="memberMap" type="Member">
        <id property="email" column="email"/>
        <result property="pw" column="pw"/>
        <result property="nickname" column="nickname"/>
        <result property="social" column="social"/>
    </resultMap>

    <resultMap id="boardImageMap" type="BoardImage">
        <result property="fileName" column="file_name"/>
        <result property="ord" column="ord"/>
    </resultMap>

    <select id="findByBno" resultMap="boardMap">
        select b.bno, b.title, b.content, b.email, b.writer, b.reg_time, b.update_time, b.view_count, m.nickname, bi.file_name, bi.ord
        from board b
        left join member m on b.email = m.email
        left join board_image bi on b.bno = bi.board_bno
        where b.bno = #{bno}
    </select>

    <update id="updateViewCount">
        update board
        set view_count = #{updateViewCount}
        where bno = #{bno}
    </update>

    <update id="update">
        update board
        set title=#{boardDTO.title},
            content=#{boardDTO.content},
            update_time=#{boardDTO.updateTime}
        where bno = #{bno}
    </update>

    <delete id="deleteByBno">
        delete
        from board
        where bno = #{bno}
    </delete>

    <delete id="deleteBoardImage">
        delete
        from board_image
        where board_bno = #{bno}
    </delete>

    <select id="findBoardList" resultMap="boardMap">
        select b.bno, b.title, b.content, b.email, b.writer, b.reg_time, b.update_time, b.view_count, m.nickname, bi.file_name, bi.ord
        from board b
        left join member m on b.email = m.email
        left join board_image bi on b.bno = bi.board_bno and bi.ord = 0
        <where>
            <if test="boardSearchDTO.title != null and boardSearchDTO.title != ''">
                or b.title like concat('%', #{boardSearchDTO.keyword}, '%')
            </if>
            <if test="boardSearchDTO.content != null and boardSearchDTO.content != ''">
                or b.content like concat('%', #{boardSearchDTO.keyword}, '%')
            </if>
        </where>
        order by b.reg_time desc , b.bno desc
        limit #{offset}, #{limit}
    </select>

    <select id="getTotalCount" resultType="int">
        select count(*)
        from board
        <where>
            <if test="title != null and title != ''">
                or title like concat('%', #{keyword}, '%')
            </if>
            <if test="content != null and content != ''">
                or content like concat('%', #{keyword}, '%')
            </if>
        </where>
    </select>



</mapper>